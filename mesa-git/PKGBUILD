# Maintainer: Hal Gentz <zegentzy@protonmail.com>
# Contributor: Lone_Wolf <lonewolf at xs4all dot nl>
# Contributor: Armin K. <krejzi at email dot com>
# Contributor: Kristian Klausen <klausenbusk@hotmail.com>
# Contributor: Egon Ashrafinia <e.ashrafinia@gmail.com>
# Contributor: Tavian Barnes <tavianator@gmail.com>
# Contributor: Jan de Groot <jgc@archlinux.org>
# Contributor: Andreas Radke <andyrtr@archlinux.org>
# Contributor: Thomas Dziedzic < gostrc at gmail >
# Contributor: Antti "Tera" Oja <antti.bofh@gmail.com>
# Contributor: Diego Jose <diegoxter1006@gmail.com>

pkgbase=mesa-git-gentz
pkgname=('mesa-git-gentz' 'lib32-mesa-git-gentz')
pkgdesc="an open-source implementation of the OpenGL specification, git version"
pkgver=19.2.0_devel.112351.a0c515ed313
pkgrel=2
arch=('x86_64')
optdepends=('opengl-man-pages: for the OpenGL API man pages')
url="https://www.mesa3d.org"
license=('custom')
makedepends=(
    'git' 'python-mako' 'xorgproto' 'libomxil-bellagio' 'ocl-icd'
    'vulkan-icd-loader' 'wayland-protocols' 'meson' 'lib32-gcc-libs'
    'lib32-llvm-git' 'lib32-libxml2' 'lib32-libx11' 'lib32-libvdpau'
    'lib32-libva' 'lib32-elfutils' 'lib32-libxrandr' 'lib32-libgcrypt'
    'lib32-wayland' 'lib32-libelf' 'llvm-git' 'libxml2' 'libx11' 'libvdpau'
    'libva' 'elfutils' 'libxrandr' 'libgcrypt' 'wayland' 'libelf' 'clang-git'
    'libclc' 'glslang' 'lib32-libomxil-bellagio'
)
groups=('gentz_custom')

source=(
    'git+https://github.com/freedesktop/mesa.git'
    'LICENSE'
    '533.patch'
    '1145.patch'
    'llvm32.cross'
    '0001-glx-Fix-synthetic-error-generation-in-__glXSendError.patch'
    '0001-egl-Fixes-transparency-with-EGL-and-X11.patch'
    '0002-egl-Puts-RGBA-visuals-in-the-second-config-selection.patch'
)
sha512sums=('SKIP'
            '25da77914dded10c1f432ebcbf29941124138824ceecaf1367b3deedafaecabc082d463abcfa3d15abff59f177491472b505bcb5ba0c4a51bb6b93b4721a23c2'
            '2838c24aea0c3da3b9f5b5e89fd0ff2d4f9c3b3bb34cba713707425f9dadb8b277ff023ae254cd897aac962beaf3f2a92f5a31e127bef37f68de353abbf75af6'
            '2721b232a9a42c4c61042fb8acbedf77f05213af0cad3f5eb79f57503946ce47c96a25b6659a952f4d52a6b602d72080f83efd6e0b4b9c7fb1f20ebb04c14bdb'
            'c023560ad4df7d4c221d03208caaac13e42931ee0bd92dd02367dc14c349b3ecd4bd445759bcc02618ed68d6047f8f9766618ed1f9953823db4a6f2f85537792'
            'eaafdf5bd19a3d450a9d7fc35cdea0c332d4a834bbe2bbe51660dc17d1099f78b87cd7ddf9a0cd2d81dbc25b61572cbfe474e7a47d61efc08ff9f3233e714e5c'
            '9dfb301a33e55484460d9d458deecd792596cc2c91eeafc941746f6def08a6a06d630cbec857a98241163106681c3d5c7676973f246f812fb31a44de83e954fa'
            '46cb8d1d88403b4f173151ed78159cd9799e35541fbd348f3a0261b3cd8ec982e5e9204c468ca2210ab2c6d556b40235c0a43f7c18947ae29fb232269d2eef53')

#_meson_flags=("-D b_ndebug=true")

pkgver() {
    cd "${srcdir}/mesa"
    read -r _ver <VERSION
    printf '%s.%s.%s' \
        "${_ver/-/_}" \
        "$(git rev-list --count HEAD)" \
        "$(git rev-parse --short HEAD)"
}

build_meson() {
    if [[ -f ".build$1.built" ]]; then
        return
    fi

    meson setup "${srcdir}/mesa" "${srcdir}/_build$1" \
        "${@:2}" \
        "${_meson_flags[@]}" \
        -D buildtype=plain \
        --wrap-mode=nofallback \
        -D prefix=/usr \
        -D sysconfdir=/etc \
        -D platforms=x11,wayland,drm,surfaceless \
        -D dri-drivers="" \
        -D gallium-drivers=radeonsi,swrast,virgl \
        -D vulkan-drivers=amd \
        -D dri3=true \
        -D egl=true \
        -D gallium-extra-hud=true \
        -D vulkan-overlay-layer=true \
        -D gallium-nine=true \
        -D gallium-va=true \
        -D gallium-vdpau=true \
        -D gallium-xvmc=false \
        -D gbm=true \
        -D gles1=true \
        -D gles2=true \
        -D glvnd=true \
        -D glx=dri \
        -D libunwind=true \
        -D llvm=true \
        -D lmsensors=true \
        -D osmesa=gallium \
        -D shared-glapi=true \
        -D valgrind=false \
        -D tools=[]

    meson configure "${srcdir}/_build$1"

    ninja $NINJAFLAGS -C "${srcdir}/_build$1"
    touch ".build$1.built"
}

prepare() {
    # So git am works.
    # Yeah, we could use git apply, but I want to be able to run diff and only
    # get the changes for my patches.
    git config --global user.email "zegentzy@protonmail.com"
    git config --global user.name "Hal Gentz"

    cd mesa
    git am "../533.patch"
    git am "../1145.patch" -C2

    git am "../0001-egl-Fixes-transparency-with-EGL-and-X11.patch"
    git am "../0002-egl-Puts-RGBA-visuals-in-the-second-config-selection.patch"
    #git am "../0001-glx-Fix-synthetic-error-generation-in-__glXSendError.patch"
    cd ..
}

build () {
    build_meson 64 \
        -D gallium-opencl=icd \
        -D gallium-omx=bellagio

    build_meson 32 \
        --cross-file "${srcdir}/llvm32.cross" \
        --libdir=/usr/lib32 \
        -D gallium-opencl=disabled \
        -D gallium-omx=disabled
}

package_lib32-mesa-git-gentz() {
    depends+=(
        'libomxil-bellagio' 'libclc' 'lib32-libelf' 'lib32-libdrm'
        'lib32-libxxf86vm' 'lib32-libxdamage' 'lib32-libxshmfence'
        'lib32-llvm-libs-git' 'lib32-libunwind' 'lib32-libglvnd'
        'lib32-wayland' 'lib32-lm_sensors' 'glslang'
    )
    provides+=(
        'lib32-mesa-git'
        'lib32-mesa' 'lib32-opencl-mesa' 'lib32-vulkan-intel'
        'lib32-vulkan-radeon' 'lib32-libva-mesa-driver' 'lib32-mesa-vdpau'
        'lib32-vulkan-driver' 'lib32-opengl-driver' 'lib32-opencl-driver'
        'lib32-ati-dri' 'lib32-intel-dri' 'lib32-nouveau-dri' 'lib32-mesa-dri' 
        'lib32-mesa-libgl'
    )
    conflicts+=(
        'lib32-mesa' 'lib32-opencl-mesa' 'lib32-vulkan-intel'
        'lib32-vulkan-radeon' 'lib32-libva-mesa-driver' 'lib32-mesa-vdpau'
        'lib32-vulkan-driver' 'lib32-opengl-driver' 'lib32-opencl-driver'
        'lib32-ati-dri' 'lib32-intel-dri' 'lib32-nouveau-dri' 'lib32-mesa-dri' 
        'lib32-mesa-libgl'
    )
    DESTDIR="${pkgdir}" ninja $NINJAFLAGS -C "${srcdir}/_build32" install

    # remove files provided by mesa-git
    rm -rf "${pkgdir}/etc"
    rm -rf "${pkgdir}/usr/include"
    rm -rf "${pkgdir}/usr/share/glvnd/"
    rm -rf "${pkgdir}/usr/share/drirc.d/"
    rm -rf "${pkgdir}/usr/share/vulkan/explicit_layer.d/"

    # indirect rendering
    ln -s /usr/lib32/libGLX_mesa.so.0 \
        "${pkgdir}/usr/lib32/libGLX_indirect.so.0"
}

package_mesa-git-gentz() {
    depends+=(
        'lib32-libomxil-bellagio' 'libclc' 'libelf' 'libdrm' 'libxxf86vm'
        'libxdamage' 'libxshmfence' 'llvm-libs-git' 'libunwind' 'libglvnd'
        'wayland' 'lm_sensors' 'glslang'
    )
    provides+=(
        'mesa-git'
        'mesa' 'opencl-mesa' 'vulkan-intel' 'vulkan-radeon' 'libva-mesa-driver'
        'mesa-vdpau' 'vulkan-driver' 'opengl-driver' 'opencl-driver'
        'ati-dri' 'intel-dri' 'nouveau-dri' 'svga-dri' 'mesa-dri' 'mesa-libgl'
    )
    conflicts+=(
        'mesa' 'opencl-mesa' 'vulkan-intel' 'vulkan-radeon' 'libva-mesa-driver'
        'mesa-vdpau' 'vulkan-driver' 'opengl-driver' 'opencl-driver'
        'ati-dri' 'intel-dri' 'nouveau-dri' 'svga-dri' 'mesa-dri' 'mesa-libgl'
    )

    DESTDIR="${pkgdir}" ninja $NINJAFLAGS -C "${srcdir}/_build64" install

    # indirect rendering
    ln -s /usr/lib/libGLX_mesa.so.0 "${pkgdir}/usr/lib/libGLX_indirect.so.0"

    install -Dt "${pkgdir}/usr/share/licenses/$pkgbase" "${srcdir}/LICENSE"
}
