From ce41b4e7b8d45a53ffd6647f434dd7772e3544ef Mon Sep 17 00:00:00 2001
From: Eric Anholt <eric@anholt.net>
Date: Thu, 20 Jun 2019 09:18:20 -0700
Subject: [PATCH 1/4] matypes: Drop some unused defines.

Most of these haven't been used since the conversion from checked-in
matypes to generation.  By cutting down the generated contents, this
should clarify why the file is generated: we need
architecture-specific offsets to the V4F fields in the asm that uses
it.
---
 src/mesa/x86/gen_matypes.c | 124 -------------------------------------
 1 file changed, 124 deletions(-)

diff --git a/src/mesa/x86/gen_matypes.c b/src/mesa/x86/gen_matypes.c
index 5b74c2af839..d3016d738b9 100644
--- a/src/mesa/x86/gen_matypes.c
+++ b/src/mesa/x86/gen_matypes.c
@@ -109,64 +109,6 @@ int main( int argc, char **argv )
    printf( "#define __ASM_TYPES_H__\n" );
    printf( "\n" );
 
-
-   /* struct gl_context offsets:
-    */
-   OFFSET_HEADER( "struct gl_context" );
-
-   printf( "\n" );
-   OFFSET( "CTX_LIGHT_ENABLED           ", struct gl_context, Light.Enabled );
-   OFFSET( "CTX_LIGHT_SHADE_MODEL       ", struct gl_context, Light.ShadeModel );
-   OFFSET( "CTX_LIGHT_COLOR_MAT_FACE    ", struct gl_context, Light.ColorMaterialFace );
-   OFFSET( "CTX_LIGHT_COLOR_MAT_MODE    ", struct gl_context, Light.ColorMaterialMode );
-   OFFSET( "CTX_LIGHT_COLOR_MAT_MASK    ", struct gl_context, Light._ColorMaterialBitmask );
-   OFFSET( "CTX_LIGHT_COLOR_MAT_ENABLED ", struct gl_context, Light.ColorMaterialEnabled );
-   OFFSET( "CTX_LIGHT_ENABLED_LIGHTS    ", struct gl_context, Light._EnabledLights );
-   OFFSET( "CTX_LIGHT_NEED_VERTS        ", struct gl_context, Light._NeedVertices );
-   OFFSET( "CTX_LIGHT_BASE_COLOR        ", struct gl_context, Light._BaseColor );
-
-
-   /* struct vertex_buffer offsets:
-    */
-   OFFSET_HEADER( "struct vertex_buffer" );
-
-   OFFSET( "VB_SIZE                ", struct vertex_buffer, Size );
-   OFFSET( "VB_COUNT               ", struct vertex_buffer, Count );
-   printf( "\n" );
-   OFFSET( "VB_ELTS                ", struct vertex_buffer, Elts );
-   OFFSET( "VB_OBJ_PTR             ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_POS] );
-   OFFSET( "VB_EYE_PTR             ", struct vertex_buffer, EyePtr );
-   OFFSET( "VB_CLIP_PTR            ", struct vertex_buffer, ClipPtr );
-   OFFSET( "VB_PROJ_CLIP_PTR       ", struct vertex_buffer, NdcPtr );
-   OFFSET( "VB_CLIP_OR_MASK        ", struct vertex_buffer, ClipOrMask );
-   OFFSET( "VB_CLIP_MASK           ", struct vertex_buffer, ClipMask );
-   OFFSET( "VB_NORMAL_PTR          ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_NORMAL] );
-   OFFSET( "VB_EDGE_FLAG           ", struct vertex_buffer, EdgeFlag );
-   OFFSET( "VB_TEX0_COORD_PTR      ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_TEX0] );
-   OFFSET( "VB_TEX1_COORD_PTR      ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_TEX1] );
-   OFFSET( "VB_TEX2_COORD_PTR      ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_TEX2] );
-   OFFSET( "VB_TEX3_COORD_PTR      ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_TEX3] );
-   OFFSET( "VB_INDEX_PTR           ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_COLOR_INDEX] );
-   OFFSET( "VB_COLOR_PTR           ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_COLOR0] );
-   OFFSET( "VB_SECONDARY_COLOR_PTR ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_COLOR1] );
-   OFFSET( "VB_FOG_COORD_PTR       ", struct vertex_buffer, AttribPtr[_TNL_ATTRIB_FOG] );
-   OFFSET( "VB_PRIMITIVE           ", struct vertex_buffer, Primitive );
-   printf( "\n" );
-
-   DEFINE_HEADER( "struct vertex_buffer" );
-
-   /* XXX use new labels here someday after vertex proram is done */
-   DEFINE( "VERT_BIT_OBJ           ", VERT_BIT_POS );
-   DEFINE( "VERT_BIT_NORM          ", VERT_BIT_NORMAL );
-   DEFINE( "VERT_BIT_RGBA          ", VERT_BIT_COLOR0 );
-   DEFINE( "VERT_BIT_SPEC_RGB      ", VERT_BIT_COLOR1 );
-   DEFINE( "VERT_BIT_FOG_COORD     ", VERT_BIT_FOG );
-   DEFINE( "VERT_BIT_TEX0          ", VERT_BIT_TEX0 );
-   DEFINE( "VERT_BIT_TEX1          ", VERT_BIT_TEX1 );
-   DEFINE( "VERT_BIT_TEX2          ", VERT_BIT_TEX2 );
-   DEFINE( "VERT_BIT_TEX3          ", VERT_BIT_TEX3 );
-
-
    /* GLvector4f offsets:
     */
    OFFSET_HEADER( "GLvector4f" );
@@ -180,77 +122,11 @@ int main( int argc, char **argv )
 
    DEFINE_HEADER( "GLvector4f" );
 
-   DEFINE( "VEC_MALLOC        ", VEC_MALLOC );
-   DEFINE( "VEC_NOT_WRITEABLE ", VEC_NOT_WRITEABLE );
-   DEFINE( "VEC_BAD_STRIDE    ", VEC_BAD_STRIDE );
-   printf( "\n" );
    DEFINE( "VEC_SIZE_1        ", VEC_SIZE_1 );
    DEFINE( "VEC_SIZE_2        ", VEC_SIZE_2 );
    DEFINE( "VEC_SIZE_3        ", VEC_SIZE_3 );
    DEFINE( "VEC_SIZE_4        ", VEC_SIZE_4 );
 
-
-   /* GLmatrix offsets:
-    */
-   OFFSET_HEADER( "GLmatrix" );
-
-   OFFSET( "MATRIX_DATA   ", GLmatrix, m );
-   OFFSET( "MATRIX_INV    ", GLmatrix, inv );
-   OFFSET( "MATRIX_FLAGS  ", GLmatrix, flags );
-   OFFSET( "MATRIX_TYPE   ", GLmatrix, type );
-
-
-   /* struct gl_light offsets:
-    */
-   OFFSET_HEADER( "struct gl_light" );
-
-   printf( "\n" );
-   OFFSET( "LIGHT_AMBIENT           ", struct gl_light, Ambient );
-   OFFSET( "LIGHT_DIFFUSE           ", struct gl_light, Diffuse );
-   OFFSET( "LIGHT_SPECULAR          ", struct gl_light, Specular );
-   OFFSET( "LIGHT_EYE_POSITION      ", struct gl_light, EyePosition );
-   OFFSET( "LIGHT_SPOT_DIRECTION    ", struct gl_light, SpotDirection );
-   OFFSET( "LIGHT_SPOT_EXPONENT     ", struct gl_light, SpotExponent );
-   OFFSET( "LIGHT_SPOT_CUTOFF       ", struct gl_light, SpotCutoff );
-   OFFSET( "LIGHT_COS_CUTOFF        ", struct gl_light, _CosCutoff );
-   OFFSET( "LIGHT_CONST_ATTEN       ", struct gl_light, ConstantAttenuation );
-   OFFSET( "LIGHT_LINEAR_ATTEN      ", struct gl_light, LinearAttenuation );
-   OFFSET( "LIGHT_QUADRATIC_ATTEN   ", struct gl_light, QuadraticAttenuation );
-   OFFSET( "LIGHT_ENABLED           ", struct gl_light, Enabled );
-   printf( "\n" );
-   OFFSET( "LIGHT_FLAGS             ", struct gl_light, _Flags );
-   printf( "\n" );
-   OFFSET( "LIGHT_POSITION          ", struct gl_light, _Position );
-   OFFSET( "LIGHT_VP_INF_NORM       ", struct gl_light, _VP_inf_norm );
-   OFFSET( "LIGHT_H_INF_NORM        ", struct gl_light, _h_inf_norm );
-   OFFSET( "LIGHT_NORM_DIRECTION    ", struct gl_light, _NormSpotDirection );
-   OFFSET( "LIGHT_VP_INF_SPOT_ATTEN ", struct gl_light, _VP_inf_spot_attenuation );
-   printf( "\n" );
-   OFFSET( "LIGHT_MAT_AMBIENT       ", struct gl_light, _MatAmbient );
-   OFFSET( "LIGHT_MAT_DIFFUSE       ", struct gl_light, _MatDiffuse );
-   OFFSET( "LIGHT_MAT_SPECULAR      ", struct gl_light, _MatSpecular );
-   printf( "\n" );
-   SIZEOF( "SIZEOF_GL_LIGHT         ", struct gl_light );
-
-   DEFINE_HEADER( "struct gl_light" );
-
-   DEFINE( "LIGHT_SPOT              ", LIGHT_SPOT );
-   DEFINE( "LIGHT_LOCAL_VIEWER      ", LIGHT_LOCAL_VIEWER );
-   DEFINE( "LIGHT_POSITIONAL        ", LIGHT_POSITIONAL );
-   printf( "\n" );
-   DEFINE( "LIGHT_NEED_VERTICES     ", LIGHT_NEED_VERTICES );
-
-
-   /* struct gl_lightmodel offsets:
-    */
-   OFFSET_HEADER( "struct gl_lightmodel" );
-
-   OFFSET( "LIGHT_MODEL_AMBIENT       ", struct gl_lightmodel, Ambient );
-   OFFSET( "LIGHT_MODEL_LOCAL_VIEWER  ", struct gl_lightmodel, LocalViewer );
-   OFFSET( "LIGHT_MODEL_TWO_SIDE      ", struct gl_lightmodel, TwoSide );
-   OFFSET( "LIGHT_MODEL_COLOR_CONTROL ", struct gl_lightmodel, ColorControl );
-
-
    printf( "\n" );
    printf( "\n" );
    printf( "#endif /* __ASM_TYPES_H__ */\n" );
-- 
2.21.0


From 52237abce0ed2a9fc29a0a6bb89d25337042c0e1 Mon Sep 17 00:00:00 2001
From: Eric Anholt <eric@anholt.net>
Date: Thu, 20 Jun 2019 10:18:41 -0700
Subject: [PATCH 2/4] mesa: Replace gen_matypes with a simple header for
 V4F/mat layout.

We can greatly simplify our builds by just hardcoding GLvector4f and
GLmatrix's layouts.
---
 src/mesa/Android.gen.mk              |  17 ----
 src/mesa/Android.mesa_gen_matypes.mk |  47 ----------
 src/mesa/Android.mk                  |   1 -
 src/mesa/SConscript                  |  17 ----
 src/mesa/math/m_matrix.c             |   5 +
 src/mesa/math/m_vector.c             |   7 ++
 src/mesa/math/m_vector.h             |  11 +--
 src/mesa/math/m_vector_asm.h         |  57 +++++++++++
 src/mesa/meson.build                 |  17 ----
 src/mesa/x86-64/xform4.S             |   3 +-
 src/mesa/x86/3dnow_xform1.S          |   3 +-
 src/mesa/x86/3dnow_xform2.S          |   3 +-
 src/mesa/x86/3dnow_xform3.S          |   3 +-
 src/mesa/x86/3dnow_xform4.S          |   3 +-
 src/mesa/x86/common_x86_asm.S        |   1 -
 src/mesa/x86/gen_matypes.c           | 135 ---------------------------
 src/mesa/x86/mmx_blend.S             |   3 +-
 src/mesa/x86/sse_normal.S            |   3 +-
 src/mesa/x86/sse_xform1.S            |   3 +-
 src/mesa/x86/sse_xform2.S            |   3 +-
 src/mesa/x86/sse_xform3.S            |   3 +-
 src/mesa/x86/sse_xform4.S            |   3 +-
 src/mesa/x86/x86_cliptest.S          |   3 +-
 src/mesa/x86/x86_xform2.S            |   3 +-
 src/mesa/x86/x86_xform3.S            |   3 +-
 src/mesa/x86/x86_xform4.S            |   3 +-
 26 files changed, 101 insertions(+), 259 deletions(-)
 delete mode 100644 src/mesa/Android.mesa_gen_matypes.mk
 create mode 100644 src/mesa/math/m_vector_asm.h
 delete mode 100644 src/mesa/x86/gen_matypes.c

diff --git a/src/mesa/Android.gen.mk b/src/mesa/Android.gen.mk
index ee2d1dec2c7..ff4f5e4e4d8 100644
--- a/src/mesa/Android.gen.mk
+++ b/src/mesa/Android.gen.mk
@@ -47,13 +47,6 @@ LOCAL_SRC_FILES := $(filter-out $(sources), $(LOCAL_SRC_FILES))
 
 LOCAL_C_INCLUDES += $(intermediates)/main
 
-ifeq ($(strip $(MESA_ENABLE_ASM)),true)
-ifeq ($(TARGET_ARCH),x86)
-sources += x86/matypes.h
-LOCAL_C_INCLUDES += $(intermediates)/x86
-endif
-endif
-
 sources := $(addprefix $(intermediates)/, $(sources))
 
 LOCAL_GENERATED_SOURCES += $(sources)
@@ -70,16 +63,6 @@ define es-gen
 	$(hide) $(PRIVATE_SCRIPT) $(1) $(PRIVATE_XML) > $@
 endef
 
-matypes_deps := \
-	$(BUILD_OUT_EXECUTABLES)/mesa_gen_matypes$(BUILD_EXECUTABLE_SUFFIX) \
-	$(LOCAL_PATH)/main/mtypes.h \
-	$(LOCAL_PATH)/tnl/t_context.h
-
-$(intermediates)/x86/matypes.h: $(matypes_deps) 
-	@mkdir -p $(dir $@)
-	@echo "MATYPES: $(PRIVATE_MODULE) <= $(notdir $@)"
-	$(hide) $< > $@
-
 $(intermediates)/main/dispatch.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(glapi)/gl_table.py
 $(intermediates)/main/dispatch.h: PRIVATE_XML := -f $(glapi)/gl_and_es_API.xml
 
diff --git a/src/mesa/Android.mesa_gen_matypes.mk b/src/mesa/Android.mesa_gen_matypes.mk
deleted file mode 100644
index 4fcf73a631d..00000000000
--- a/src/mesa/Android.mesa_gen_matypes.mk
+++ /dev/null
@@ -1,47 +0,0 @@
-# Copyright 2012 Intel Corporation
-# Copyright (C) 2010-2011 Chia-I Wu <olvaffe@gmail.com>
-# Copyright (C) 2010-2011 LunarG Inc.
-#
-# Permission is hereby granted, free of charge, to any person obtaining a
-# copy of this software and associated documentation files (the "Software"),
-# to deal in the Software without restriction, including without limitation
-# the rights to use, copy, modify, merge, publish, distribute, sublicense,
-# and/or sell copies of the Software, and to permit persons to whom the
-# Software is furnished to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included
-# in all copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
-# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-# DEALINGS IN THE SOFTWARE.
-
-# ---------------------------------------------------------------------
-# host executable: mesa_gen_matypes
-# ---------------------------------------------------------------------
-
-ifeq ($(strip $(MESA_ENABLE_ASM)),true)
-ifeq ($(TARGET_ARCH),x86)
-
-LOCAL_PATH := $(call my-dir)
-
-include $(CLEAR_VARS)
-
-LOCAL_MODULE := mesa_gen_matypes
-LOCAL_IS_HOST_MODULE := true
-
-LOCAL_C_INCLUDES := \
-	$(MESA_TOP)/src/mapi
-
-LOCAL_SRC_FILES := \
-	x86/gen_matypes.c
-
-include $(MESA_COMMON_MK)
-include $(BUILD_HOST_EXECUTABLE)
-
-endif # x86
-endif # MESA_ENABLE_ASM
diff --git a/src/mesa/Android.mk b/src/mesa/Android.mk
index e89de82f4ed..a740c2d2220 100644
--- a/src/mesa/Android.mk
+++ b/src/mesa/Android.mk
@@ -20,7 +20,6 @@
 
 LOCAL_PATH := $(call my-dir)
 
-include $(LOCAL_PATH)/Android.mesa_gen_matypes.mk
 include $(LOCAL_PATH)/Android.libmesa_glsl_utils.mk
 include $(LOCAL_PATH)/Android.libmesa_dricore.mk
 include $(LOCAL_PATH)/Android.libmesa_st_mesa.mk
diff --git a/src/mesa/SConscript b/src/mesa/SConscript
index eaf23fbae18..da003743f59 100644
--- a/src/mesa/SConscript
+++ b/src/mesa/SConscript
@@ -103,23 +103,6 @@ if env['platform'] not in ('cygwin', 'darwin', 'windows', 'haiku'):
     else:
         pass
 
-    # Generate matypes.h
-    if env['machine'] in ('x86', 'x86_64'):
-        # See http://www.scons.org/wiki/UsingCodeGenerators
-        gen_matypes = env.Program(
-            target = 'gen_matypes',
-            source = 'x86/gen_matypes.c',
-        )
-        matypes = env.Command(
-            'matypes.h',
-            gen_matypes,
-            gen_matypes[0].abspath + ' > $TARGET',
-        )
-        # Add the dir containing the generated header (somewhere inside  the
-        # build dir) to the include path
-        env.Prepend(CPPPATH = [matypes[0].dir])
-
-
 # The marshal_generated.c file is generated from the GL/ES API.xml file
 env.CodeGenerate(
     target = 'main/marshal_generated.c',
diff --git a/src/mesa/math/m_matrix.c b/src/mesa/math/m_matrix.c
index 57a49533de2..6f91dbd1915 100644
--- a/src/mesa/math/m_matrix.c
+++ b/src/mesa/math/m_matrix.c
@@ -39,6 +39,8 @@
 #include "main/glheader.h"
 #include "main/imports.h"
 #include "main/macros.h"
+#define MATH_ASM_PTR_SIZE sizeof(void *)
+#include "math/m_vector_asm.h"
 
 #include "m_matrix.h"
 
@@ -1137,6 +1139,9 @@ _math_matrix_viewport(GLmatrix *m, const float scale[3],
 void
 _math_matrix_set_identity( GLmatrix *mat )
 {
+   STATIC_ASSERT(MATRIX_M == offsetof(GLmatrix, m));
+   STATIC_ASSERT(MATRIX_INV == offsetof(GLmatrix, inv));
+
    memcpy( mat->m, Identity, sizeof(Identity) );
    memcpy( mat->inv, Identity, sizeof(Identity) );
 
diff --git a/src/mesa/math/m_vector.c b/src/mesa/math/m_vector.c
index 831f953d655..0f7c52a4ff1 100644
--- a/src/mesa/math/m_vector.c
+++ b/src/mesa/math/m_vector.c
@@ -79,6 +79,13 @@ static const GLubyte size_bits[5] = {
 void
 _mesa_vector4f_init( GLvector4f *v, GLbitfield flags, GLfloat (*storage)[4] )
 {
+   STATIC_ASSERT(V4F_DATA == offsetof(GLvector4f, data));
+   STATIC_ASSERT(V4F_START == offsetof(GLvector4f, start));
+   STATIC_ASSERT(V4F_COUNT == offsetof(GLvector4f, count));
+   STATIC_ASSERT(V4F_STRIDE == offsetof(GLvector4f, stride));
+   STATIC_ASSERT(V4F_SIZE == offsetof(GLvector4f, size));
+   STATIC_ASSERT(V4F_FLAGS == offsetof(GLvector4f, flags));
+
    v->stride = 4 * sizeof(GLfloat);
    v->size = 2;   /* may change: 2-4 for vertices and 1-4 for texcoords */
    v->data = storage;
diff --git a/src/mesa/math/m_vector.h b/src/mesa/math/m_vector.h
index 5bd76b8987d..2065324556b 100644
--- a/src/mesa/math/m_vector.h
+++ b/src/mesa/math/m_vector.h
@@ -31,21 +31,14 @@
 #define _M_VECTOR_H_
 
 #include "main/glheader.h"
+#define MATH_ASM_PTR_SIZE sizeof(void *)
+#include "math/m_vector_asm.h"
 
-
-#define VEC_DIRTY_0        0x1
-#define VEC_DIRTY_1        0x2
-#define VEC_DIRTY_2        0x4
-#define VEC_DIRTY_3        0x8
 #define VEC_MALLOC         0x10 /* storage field points to self-allocated mem*/
 #define VEC_NOT_WRITEABLE  0x40	/* writable elements to hold clipped data */
 #define VEC_BAD_STRIDE     0x100 /* matches tnl's prefered stride */
 
 
-#define VEC_SIZE_1   VEC_DIRTY_0
-#define VEC_SIZE_2   (VEC_DIRTY_0|VEC_DIRTY_1)
-#define VEC_SIZE_3   (VEC_DIRTY_0|VEC_DIRTY_1|VEC_DIRTY_2)
-#define VEC_SIZE_4   (VEC_DIRTY_0|VEC_DIRTY_1|VEC_DIRTY_2|VEC_DIRTY_3)
 
 
 
diff --git a/src/mesa/math/m_vector_asm.h b/src/mesa/math/m_vector_asm.h
new file mode 100644
index 00000000000..60cf1ec8fd1
--- /dev/null
+++ b/src/mesa/math/m_vector_asm.h
@@ -0,0 +1,57 @@
+/*
+ * Copyright © 2019 Google LLC
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the next
+ * paragraph) shall be included in all copies or substantial portions of the
+ * Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+ * IN THE SOFTWARE.
+ */
+
+#ifndef _M_VECTOR_ASM_H_
+#define _M_VECTOR_ASM_H_
+
+/* This file is a set of defines usable by the old FF TNL assembly code for
+ * referencing GLvector4f and GLmatrix structs.
+ */
+
+#define VEC_DIRTY_0        0x1
+#define VEC_DIRTY_1        0x2
+#define VEC_DIRTY_2        0x4
+#define VEC_DIRTY_3        0x8
+
+#define VEC_SIZE_1   VEC_DIRTY_0
+#define VEC_SIZE_2   (VEC_DIRTY_0|VEC_DIRTY_1)
+#define VEC_SIZE_3   (VEC_DIRTY_0|VEC_DIRTY_1|VEC_DIRTY_2)
+#define VEC_SIZE_4   (VEC_DIRTY_0|VEC_DIRTY_1|VEC_DIRTY_2|VEC_DIRTY_3)
+
+/* If you add a new field, please add it to the STATIC_ASSERTs in
+ * _mesa_vector4f_init().
+ */
+#define V4F_DATA   0
+#define V4F_START  (V4F_DATA + MATH_ASM_PTR_SIZE)
+#define V4F_COUNT  (V4F_START + MATH_ASM_PTR_SIZE)
+#define V4F_STRIDE (V4F_COUNT + 4)
+#define V4F_SIZE   (V4F_STRIDE + 4)
+#define V4F_FLAGS  (V4F_SIZE + 4)
+
+/* If you add a new field, please add it to the STATIC_ASSERTs in
+ * _math_matrix_set_identity().
+ */
+#define MATRIX_M   0
+#define MATRIX_INV (MATRIX_M + MATH_ASM_PTR_SIZE)
+
+#endif /* _M_VECTOR_ASM_H */
diff --git a/src/mesa/meson.build b/src/mesa/meson.build
index 2d9b673fbe7..baf5c6b11c1 100644
--- a/src/mesa/meson.build
+++ b/src/mesa/meson.build
@@ -605,22 +605,6 @@ files_libmesa_gallium = files(
   'state_tracker/st_vdpau.h',
 )
 
-matypes_h = []
-if with_asm_arch == 'x86' or with_asm_arch == 'x86_64'
-  gen_matypes = executable(
-    'gen_matypes',
-    'x86/gen_matypes.c',
-    c_args : [c_vis_args, c_msvc_compat_args],
-    include_directories : inc_common,
-  )
-  matypes_h = custom_target(
-    'matypes.h',
-    output : 'matypes.h',
-    command : [gen_matypes],
-    capture : true,
-  )
-endif
-
 inc_libmesa_asm = []
 if with_asm_arch == 'x86'
   files_libmesa_common += files(
@@ -707,7 +691,6 @@ files_libmesa_common += [
   main_dispatch_h,
   ir_expression_operation_h,
   main_remap_helper_h,
-  matypes_h,
   sha1_h,
 ]
 
diff --git a/src/mesa/x86-64/xform4.S b/src/mesa/x86-64/xform4.S
index b0aca19c8b0..b5d224237cf 100644
--- a/src/mesa/x86-64/xform4.S
+++ b/src/mesa/x86-64/xform4.S
@@ -24,7 +24,8 @@
 
 #ifdef USE_X86_64_ASM
 
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 8
+#include "math/m_vector_asm.h"
 
 .text
 
diff --git a/src/mesa/x86/3dnow_xform1.S b/src/mesa/x86/3dnow_xform1.S
index 939cd209858..2b157bb0e27 100644
--- a/src/mesa/x86/3dnow_xform1.S
+++ b/src/mesa/x86/3dnow_xform1.S
@@ -25,7 +25,8 @@
 
 #ifdef USE_3DNOW_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
     SEG_TEXT
diff --git a/src/mesa/x86/3dnow_xform2.S b/src/mesa/x86/3dnow_xform2.S
index 169a47f0866..fd71648e2c0 100644
--- a/src/mesa/x86/3dnow_xform2.S
+++ b/src/mesa/x86/3dnow_xform2.S
@@ -25,7 +25,8 @@
 
 #ifdef USE_3DNOW_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
     SEG_TEXT
diff --git a/src/mesa/x86/3dnow_xform3.S b/src/mesa/x86/3dnow_xform3.S
index 7b0189c4ffc..db24843463f 100644
--- a/src/mesa/x86/3dnow_xform3.S
+++ b/src/mesa/x86/3dnow_xform3.S
@@ -25,7 +25,8 @@
 
 #ifdef USE_3DNOW_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
     SEG_TEXT
diff --git a/src/mesa/x86/3dnow_xform4.S b/src/mesa/x86/3dnow_xform4.S
index ee845b34004..161aaa1a9b7 100644
--- a/src/mesa/x86/3dnow_xform4.S
+++ b/src/mesa/x86/3dnow_xform4.S
@@ -25,7 +25,8 @@
 
 #ifdef USE_3DNOW_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
     SEG_TEXT
diff --git a/src/mesa/x86/common_x86_asm.S b/src/mesa/x86/common_x86_asm.S
index 1887bcaaff4..7b29416c7aa 100644
--- a/src/mesa/x86/common_x86_asm.S
+++ b/src/mesa/x86/common_x86_asm.S
@@ -39,7 +39,6 @@
  * in there will break the build on some platforms.
  */
 
-#include "matypes.h"
 #include "assyntax.h"
 #include "common_x86_features.h"
 
diff --git a/src/mesa/x86/gen_matypes.c b/src/mesa/x86/gen_matypes.c
deleted file mode 100644
index d3016d738b9..00000000000
--- a/src/mesa/x86/gen_matypes.c
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
- * Mesa 3-D graphics library
- *
- * Copyright (C) 1999-2006  Brian Paul   All Rights Reserved.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included
- * in all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
- * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors:
- *    Gareth Hughes
- */
-
-/*
- * This generates an asm version of mtypes.h (called matypes.h), so that
- * Mesa's x86 assembly code can access the internal structures easily.
- * This will be particularly useful when developing new x86 asm code for
- * Mesa, including lighting, clipping, texture image conversion etc.
- */
-
-#include <stdio.h>
-#include <inttypes.h>
-
-#include "main/glheader.h"
-#include "main/mtypes.h"
-#include "tnl/t_context.h"
-
-
-#undef offsetof
-#define offsetof( type, member ) ((size_t) &((type *)0)->member)
-
-
-#define OFFSET_HEADER( x )						\
-do {									\
-   printf( "\n" );							\
-   printf( "\n" );							\
-   printf( "/* ====================================================="	\
-	   "========\n" );						\
-   printf( " * Offsets for " x "\n" );					\
-   printf( " */\n" );							\
-   printf( "\n" );							\
-} while (0)
-
-#define DEFINE_HEADER( x )						\
-do {									\
-   printf( "\n" );							\
-   printf( "/*\n" );							\
-   printf( " * Flags for " x "\n" );					\
-   printf( " */\n" );							\
-   printf( "\n" );							\
-} while (0)
-
-#ifdef ASM_OFFSETS
-
-/*
- * Format the asm output in a special way that we can manipulate
- * after the fact and turn into the final header for the target.
- */
-
-#define DEFINE_UL( s, ul )						\
-   __asm__ __volatile__ ( "\n->" s " %0" : : "i" (ul) )
-
-#define DEFINE( s, d )							\
-   DEFINE_UL( s, d )
-
-#define printf( x )							\
-   __asm__ __volatile__ ( "\n->" x )
-
-#else
-
-#define DEFINE_UL( s, ul )						\
-   printf( "#define %s\t%lu\n", s, (unsigned long) (ul) );
-
-#define DEFINE( s, d )							\
-   printf( "#define %s\t0x%" PRIx64 "\n", s, (uint64_t) d );
-
-#endif
-
-#define OFFSET( s, t, m )						\
-   DEFINE_UL( s, offsetof( t, m ) )
-
-#define SIZEOF( s, t )							\
-   DEFINE_UL( s, sizeof(t) )
-
-
-
-int main( int argc, char **argv )
-{
-   printf( "/*\n" );
-   printf( " * This file is automatically generated from the Mesa internal type\n" );
-   printf( " * definitions.  Do not edit directly.\n" );
-   printf( " */\n" );
-   printf( "\n" );
-   printf( "#ifndef __ASM_TYPES_H__\n" );
-   printf( "#define __ASM_TYPES_H__\n" );
-   printf( "\n" );
-
-   /* GLvector4f offsets:
-    */
-   OFFSET_HEADER( "GLvector4f" );
-
-   OFFSET( "V4F_DATA          ", GLvector4f, data );
-   OFFSET( "V4F_START         ", GLvector4f, start );
-   OFFSET( "V4F_COUNT         ", GLvector4f, count );
-   OFFSET( "V4F_STRIDE        ", GLvector4f, stride );
-   OFFSET( "V4F_SIZE          ", GLvector4f, size );
-   OFFSET( "V4F_FLAGS         ", GLvector4f, flags );
-
-   DEFINE_HEADER( "GLvector4f" );
-
-   DEFINE( "VEC_SIZE_1        ", VEC_SIZE_1 );
-   DEFINE( "VEC_SIZE_2        ", VEC_SIZE_2 );
-   DEFINE( "VEC_SIZE_3        ", VEC_SIZE_3 );
-   DEFINE( "VEC_SIZE_4        ", VEC_SIZE_4 );
-
-   printf( "\n" );
-   printf( "\n" );
-   printf( "#endif /* __ASM_TYPES_H__ */\n" );
-
-   return 0;
-}
diff --git a/src/mesa/x86/mmx_blend.S b/src/mesa/x86/mmx_blend.S
index df736cdaa59..500e54a57f4 100644
--- a/src/mesa/x86/mmx_blend.S
+++ b/src/mesa/x86/mmx_blend.S
@@ -6,7 +6,8 @@
 
 #ifdef USE_MMX_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 
 /* integer multiplication - alpha plus one
  *
diff --git a/src/mesa/x86/sse_normal.S b/src/mesa/x86/sse_normal.S
index 36d69e0b0a1..279f6eafcad 100644
--- a/src/mesa/x86/sse_normal.S
+++ b/src/mesa/x86/sse_normal.S
@@ -32,7 +32,8 @@
 
 #ifdef USE_SSE_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "norm_args.h"
 
    SEG_TEXT
diff --git a/src/mesa/x86/sse_xform1.S b/src/mesa/x86/sse_xform1.S
index 7d84a52bc3c..9473fc1571f 100644
--- a/src/mesa/x86/sse_xform1.S
+++ b/src/mesa/x86/sse_xform1.S
@@ -32,7 +32,8 @@
 
 #ifdef USE_SSE_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
    SEG_TEXT
diff --git a/src/mesa/x86/sse_xform2.S b/src/mesa/x86/sse_xform2.S
index 70215100d19..f89146b42d5 100644
--- a/src/mesa/x86/sse_xform2.S
+++ b/src/mesa/x86/sse_xform2.S
@@ -32,7 +32,8 @@
 
 #ifdef USE_SSE_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
    SEG_TEXT
diff --git a/src/mesa/x86/sse_xform3.S b/src/mesa/x86/sse_xform3.S
index aeb43ef7017..93387860389 100644
--- a/src/mesa/x86/sse_xform3.S
+++ b/src/mesa/x86/sse_xform3.S
@@ -32,7 +32,8 @@
 
 #ifdef USE_SSE_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
    SEG_TEXT
diff --git a/src/mesa/x86/sse_xform4.S b/src/mesa/x86/sse_xform4.S
index 0baa8ef8411..d81e9a5b9a1 100644
--- a/src/mesa/x86/sse_xform4.S
+++ b/src/mesa/x86/sse_xform4.S
@@ -25,7 +25,8 @@
 
 #ifdef USE_SSE_ASM
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
 	SEG_TEXT
diff --git a/src/mesa/x86/x86_cliptest.S b/src/mesa/x86/x86_cliptest.S
index 031ec1d88ed..231c029e84f 100644
--- a/src/mesa/x86/x86_cliptest.S
+++ b/src/mesa/x86/x86_cliptest.S
@@ -30,7 +30,8 @@
  */
 
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "clip_args.h"
 
 #define SRC0		REGOFF(0, ESI)
diff --git a/src/mesa/x86/x86_xform2.S b/src/mesa/x86/x86_xform2.S
index a36c3dcdab7..fb1b4bea572 100644
--- a/src/mesa/x86/x86_xform2.S
+++ b/src/mesa/x86/x86_xform2.S
@@ -30,7 +30,8 @@
  */
 
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
 	SEG_TEXT
diff --git a/src/mesa/x86/x86_xform3.S b/src/mesa/x86/x86_xform3.S
index 52783064e40..6d2d5185e4c 100644
--- a/src/mesa/x86/x86_xform3.S
+++ b/src/mesa/x86/x86_xform3.S
@@ -30,7 +30,8 @@
  */
 
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
 	SEG_TEXT
diff --git a/src/mesa/x86/x86_xform4.S b/src/mesa/x86/x86_xform4.S
index e585968ed95..f6db5e3165b 100644
--- a/src/mesa/x86/x86_xform4.S
+++ b/src/mesa/x86/x86_xform4.S
@@ -30,7 +30,8 @@
  */
 
 #include "assyntax.h"
-#include "matypes.h"
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #include "xform_args.h"
 
 	SEG_TEXT
-- 
2.21.0


From 3d3060ab8053b63f92072f834055f5339ec48c20 Mon Sep 17 00:00:00 2001
From: Eric Anholt <eric@anholt.net>
Date: Thu, 20 Jun 2019 10:27:28 -0700
Subject: [PATCH 3/4] mesa: Enable asm unconditionally, now that gen_matypes is
 gone.

---
 Android.common.mk                   |  3 -
 Android.mk                          |  7 ---
 meson.build                         | 94 ++++++++++-------------------
 meson_options.txt                   |  6 --
 src/mesa/Android.libmesa_dricore.mk |  2 -
 src/mesa/Android.libmesa_st_mesa.mk |  2 -
 6 files changed, 33 insertions(+), 81 deletions(-)

diff --git a/Android.common.mk b/Android.common.mk
index 36d97c52dd1..9eb35532e69 100644
--- a/Android.common.mk
+++ b/Android.common.mk
@@ -98,12 +98,9 @@ ifeq ($(filter 5 6 7 8 9, $(MESA_ANDROID_MAJOR_VERSION)),)
 LOCAL_CFLAGS += -DHAVE_TIMESPEC_GET
 endif
 
-ifeq ($(strip $(MESA_ENABLE_ASM)),true)
 ifeq ($(TARGET_ARCH),x86)
 LOCAL_CFLAGS += \
 	-DUSE_X86_ASM
-
-endif
 endif
 ifeq ($(ARCH_ARM_HAVE_NEON),true)
 LOCAL_CFLAGS_arm += -DUSE_ARM_ASM
diff --git a/Android.mk b/Android.mk
index 5fe028c6d19..8d274e56836 100644
--- a/Android.mk
+++ b/Android.mk
@@ -83,13 +83,6 @@ endif
 
 $(foreach d, $(MESA_BUILD_CLASSIC) $(MESA_BUILD_GALLIUM), $(eval $(d) := true))
 
-# host and target must be the same arch to generate matypes.h
-ifeq ($(TARGET_ARCH),$(HOST_ARCH))
-MESA_ENABLE_ASM := true
-else
-MESA_ENABLE_ASM := false
-endif
-
 ifneq ($(filter true, $(HAVE_GALLIUM_RADEONSI)),)
 MESA_ENABLE_LLVM := true
 endif
diff --git a/meson.build b/meson.build
index 28689857dc3..197c6f84bc1 100644
--- a/meson.build
+++ b/meson.build
@@ -49,7 +49,6 @@ with_vulkan_icd_dir = get_option('vulkan-icd-dir')
 with_tests = get_option('build-tests')
 with_valgrind = get_option('valgrind')
 with_libunwind = get_option('libunwind')
-with_asm = get_option('asm')
 with_glx_read_only_text = get_option('glx-read-only-text')
 with_glx_direct = get_option('glx-direct')
 with_osmesa = get_option('osmesa')
@@ -964,69 +963,42 @@ endif
 
 # TODO: shared/static? Is this even worth doing?
 
-# When cross compiling we generally need to turn off the use of assembly,
-# because mesa's assembly relies on building an executable for the host system,
-# and running it to get information about struct sizes. There is at least one
-# case of cross compiling where we can use asm, and that's x86_64 -> x86 when
-# host OS == build OS, since in that case the build machine can run the host's
-# binaries.
-if with_asm and meson.is_cross_build()
-  if build_machine.system() != host_machine.system()
-    # TODO: It may be possible to do this with an exe_wrapper (like wine).
-    message('Cross compiling from one OS to another, disabling assembly.')
-    with_asm = false
-  elif not (build_machine.cpu_family().startswith('x86') and host_machine.cpu_family() == 'x86')
-    # FIXME: Gentoo always sets -m32 for x86_64 -> x86 builds, resulting in an
-    # x86 -> x86 cross compile. We use startswith rather than == to handle this
-    # case.
-    # TODO: There may be other cases where the 64 bit version of the
-    # architecture can run 32 bit binaries (aarch64 and armv7 for example)
-    message('''
-      Cross compiling to different architectures, and the host cannot run
-      the build machine's binaries. Disabling assembly.
-    ''')
-    with_asm = false
-  endif
-endif
-
 with_asm_arch = ''
-if with_asm
-  if host_machine.cpu_family() == 'x86'
-    if system_has_kms_drm or host_machine.system() == 'gnu'
-      with_asm_arch = 'x86'
-      pre_args += ['-DUSE_X86_ASM', '-DUSE_MMX_ASM', '-DUSE_3DNOW_ASM',
-                   '-DUSE_SSE_ASM']
-
-      if with_glx_read_only_text
-         pre_args += ['-DGLX_X86_READONLY_TEXT']
-      endif
-    endif
-  elif host_machine.cpu_family() == 'x86_64'
-    if system_has_kms_drm
-      with_asm_arch = 'x86_64'
-      pre_args += ['-DUSE_X86_64_ASM']
-    endif
-  elif host_machine.cpu_family() == 'arm'
-    if system_has_kms_drm
-      with_asm_arch = 'arm'
-      pre_args += ['-DUSE_ARM_ASM']
-    endif
-  elif host_machine.cpu_family() == 'aarch64'
-    if system_has_kms_drm
-      with_asm_arch = 'aarch64'
-      pre_args += ['-DUSE_AARCH64_ASM']
-    endif
-  elif host_machine.cpu_family() == 'sparc64'
-    if system_has_kms_drm
-      with_asm_arch = 'sparc'
-      pre_args += ['-DUSE_SPARC_ASM']
-    endif
-  elif host_machine.cpu_family().startswith('ppc64') and host_machine.endian() == 'little'
-    if system_has_kms_drm
-      with_asm_arch = 'ppc64le'
-      pre_args += ['-DUSE_PPC64LE_ASM']
+if host_machine.cpu_family() == 'x86'
+  if system_has_kms_drm or host_machine.system() == 'gnu'
+    with_asm_arch = 'x86'
+    pre_args += ['-DUSE_X86_ASM', '-DUSE_MMX_ASM', '-DUSE_3DNOW_ASM',
+                 '-DUSE_SSE_ASM']
+
+    if with_glx_read_only_text
+      pre_args += ['-DGLX_X86_READONLY_TEXT']
     endif
   endif
+elif host_machine.cpu_family() == 'x86_64'
+  if system_has_kms_drm
+    with_asm_arch = 'x86_64'
+    pre_args += ['-DUSE_X86_64_ASM']
+  endif
+elif host_machine.cpu_family() == 'arm'
+  if system_has_kms_drm
+    with_asm_arch = 'arm'
+    pre_args += ['-DUSE_ARM_ASM']
+  endif
+elif host_machine.cpu_family() == 'aarch64'
+  if system_has_kms_drm
+    with_asm_arch = 'aarch64'
+    pre_args += ['-DUSE_AARCH64_ASM']
+  endif
+elif host_machine.cpu_family() == 'sparc64'
+  if system_has_kms_drm
+    with_asm_arch = 'sparc'
+    pre_args += ['-DUSE_SPARC_ASM']
+  endif
+elif host_machine.cpu_family().startswith('ppc64') and host_machine.endian() == 'little'
+  if system_has_kms_drm
+    with_asm_arch = 'ppc64le'
+    pre_args += ['-DUSE_PPC64LE_ASM']
+  endif
 endif
 
 # Check for standard headers and functions
diff --git a/meson_options.txt b/meson_options.txt
index 1f72faabee8..2a549c7dc37 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -227,12 +227,6 @@ option(
   value : false,
   description : 'Enable GLVND support.'
 )
-option(
-  'asm',
-  type : 'boolean',
-  value : true,
-  description : 'Build assembly code if possible'
-)
 option(
    'glx-read-only-text',
    type : 'boolean',
diff --git a/src/mesa/Android.libmesa_dricore.mk b/src/mesa/Android.libmesa_dricore.mk
index 792117767b4..8eb6aabe836 100644
--- a/src/mesa/Android.libmesa_dricore.mk
+++ b/src/mesa/Android.libmesa_dricore.mk
@@ -39,11 +39,9 @@ LOCAL_MODULE_CLASS := STATIC_LIBRARIES
 LOCAL_SRC_FILES := \
 	$(MESA_FILES)
 
-ifeq ($(strip $(MESA_ENABLE_ASM)),true)
 ifeq ($(TARGET_ARCH),x86)
 	LOCAL_SRC_FILES += $(X86_FILES)
 endif # x86
-endif # MESA_ENABLE_ASM
 
 ifeq ($(ARCH_X86_HAVE_SSE4_1),true)
 LOCAL_WHOLE_STATIC_LIBRARIES := \
diff --git a/src/mesa/Android.libmesa_st_mesa.mk b/src/mesa/Android.libmesa_st_mesa.mk
index ddfd03059c5..16153a3c5bd 100644
--- a/src/mesa/Android.libmesa_st_mesa.mk
+++ b/src/mesa/Android.libmesa_st_mesa.mk
@@ -42,11 +42,9 @@ LOCAL_GENERATED_SOURCES := \
 	$(MESA_GEN_GLSL_H) \
 	$(MESA_GEN_NIR_H)
 
-ifeq ($(strip $(MESA_ENABLE_ASM)),true)
 ifeq ($(TARGET_ARCH),x86)
 	LOCAL_SRC_FILES += $(X86_FILES)
 endif # x86
-endif # MESA_ENABLE_ASM
 
 ifeq ($(ARCH_X86_HAVE_SSE4_1),true)
 LOCAL_WHOLE_STATIC_LIBRARIES := \
-- 
2.21.0


From f9a3cf0953a37e0ad9ece9ed86f5e0b105b24089 Mon Sep 17 00:00:00 2001
From: Eric Anholt <eric@anholt.net>
Date: Thu, 20 Jun 2019 10:35:32 -0700
Subject: [PATCH 4/4] sparc: Reuse m_vector_asm.h.

---
 src/mesa/sparc/norm.S         | 12 ++++++------
 src/mesa/sparc/sparc_clip.S   | 16 ++++------------
 src/mesa/sparc/sparc_matrix.h | 20 ++++----------------
 3 files changed, 14 insertions(+), 34 deletions(-)

diff --git a/src/mesa/sparc/norm.S b/src/mesa/sparc/norm.S
index 117d36fa223..f0b1fdeeba6 100644
--- a/src/mesa/sparc/norm.S
+++ b/src/mesa/sparc/norm.S
@@ -29,7 +29,7 @@ _mesa_sparc_transform_normalize_normals:
 	ld	[%sp + STACK_VAR_OFF+0x4], %f15	! f15 = scale
 	add	%sp, 16, %sp
 
-	LDPTR	[%o0 + MAT_INV], %o0		! o0 = mat->inv
+	LDPTR	[%o0 + MATRIX_INV], %o0		! o0 = mat->inv
 	LDPTR	[%o2 + V4F_START], %o5		! o5 = 'from' in->start
 	ld	[%o2 + V4F_COUNT], %g1		! g1 = in->count
 	ld	[%o2 + V4F_STRIDE], %g2		! g2 = in->stride
@@ -168,7 +168,7 @@ _mesa_sparc_transform_normalize_normals_no_rot:
 	ld	[%sp + STACK_VAR_OFF+0x4], %f15	! f15 = scale
 	add	%sp, 16, %sp
 
-	LDPTR	[%o0 + MAT_INV], %o0		! o0 = mat->inv
+	LDPTR	[%o0 + MATRIX_INV], %o0		! o0 = mat->inv
 	LDPTR	[%o2 + V4F_START], %o5		! o5 = 'from' in->start
 	ld	[%o2 + V4F_COUNT], %g1		! g1 = in->count
 	ld	[%o2 + V4F_STRIDE], %g2		! g2 = in->stride
@@ -273,7 +273,7 @@ _mesa_sparc_transform_rescale_normals_no_rot:
 	ld	[%sp + STACK_VAR_OFF+0x0], %f15	! f15 = scale
 	add	%sp, 16, %sp
 
-	LDPTR	[%o0 + MAT_INV], %o0		! o0 = mat->inv
+	LDPTR	[%o0 + MATRIX_INV], %o0		! o0 = mat->inv
 	LDPTR	[%o2 + V4F_START], %o5		! o5 = 'from' in->start
 	ld	[%o2 + V4F_COUNT], %g1		! g1 = in->count
 	ld	[%o2 + V4F_STRIDE], %g2		! g2 = in->stride
@@ -324,7 +324,7 @@ _mesa_sparc_transform_rescale_normals:
 	ld	[%sp + STACK_VAR_OFF+0x0], %f15	! f15 = scale
 	add	%sp, 16, %sp
 
-	LDPTR	[%o0 + MAT_INV], %o0		! o0 = mat->inv
+	LDPTR	[%o0 + MATRIX_INV], %o0		! o0 = mat->inv
 	LDPTR	[%o2 + V4F_START], %o5		! o5 = 'from' in->start
 	ld	[%o2 + V4F_COUNT], %g1		! g1 = in->count
 	ld	[%o2 + V4F_STRIDE], %g2		! g2 = in->stride
@@ -384,7 +384,7 @@ _mesa_sparc_transform_rescale_normals:
 	.globl	_mesa_sparc_transform_normals_no_rot
 _mesa_sparc_transform_normals_no_rot:
 	/* o0=mat o1=scale o2=in o3=lengths o4=dest */
-	LDPTR	[%o0 + MAT_INV], %o0		! o0 = mat->inv
+	LDPTR	[%o0 + MATRIX_INV], %o0		! o0 = mat->inv
 	LDPTR	[%o2 + V4F_START], %o5		! o5 = 'from' in->start
 	ld	[%o2 + V4F_COUNT], %g1		! g1 = in->count
 	ld	[%o2 + V4F_STRIDE], %g2		! g2 = in->stride
@@ -426,7 +426,7 @@ _mesa_sparc_transform_normals_no_rot:
 	.globl	_mesa_sparc_transform_normals
 _mesa_sparc_transform_normals:
 	/* o0=mat o1=scale o2=in o3=lengths o4=dest */
-	LDPTR	[%o0 + MAT_INV], %o0		! o0 = mat->inv
+	LDPTR	[%o0 + MATRIX_INV], %o0		! o0 = mat->inv
 	LDPTR	[%o2 + V4F_START], %o5		! o5 = 'from' in->start
 	ld	[%o2 + V4F_COUNT], %g1		! g1 = in->count
 	ld	[%o2 + V4F_STRIDE], %g2		! g2 = in->stride
diff --git a/src/mesa/sparc/sparc_clip.S b/src/mesa/sparc/sparc_clip.S
index dc239171ff9..11aa8324ec2 100644
--- a/src/mesa/sparc/sparc_clip.S
+++ b/src/mesa/sparc/sparc_clip.S
@@ -4,20 +4,12 @@
 
 #if __arch64__
 #define LDPTR		ldx
-#define V4F_DATA	0x00
-#define V4F_START	0x08
-#define V4F_COUNT	0x10
-#define V4F_STRIDE	0x14
-#define V4F_SIZE	0x18
-#define V4F_FLAGS	0x1c
+#define MATH_ASM_PTR_SIZE 8
+#include "math/m_vector_asm.h"
 #else
 #define LDPTR		ld
-#define V4F_DATA	0x00
-#define V4F_START	0x04
-#define V4F_COUNT	0x08
-#define V4F_STRIDE	0x0c
-#define V4F_SIZE	0x10
-#define V4F_FLAGS	0x14
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #endif
 
 #define VEC_SIZE_1   	1
diff --git a/src/mesa/sparc/sparc_matrix.h b/src/mesa/sparc/sparc_matrix.h
index 6ef0acde69e..d478b76802f 100644
--- a/src/mesa/sparc/sparc_matrix.h
+++ b/src/mesa/sparc/sparc_matrix.h
@@ -7,24 +7,12 @@
 
 #ifdef __arch64__
 #define LDPTR		ldx
-#define MAT_M		0x00
-#define MAT_INV		0x08
-#define V4F_DATA	0x00
-#define V4F_START	0x08
-#define V4F_COUNT	0x10
-#define V4F_STRIDE	0x14
-#define V4F_SIZE	0x18
-#define V4F_FLAGS	0x1c
+#define MATH_ASM_PTR_SIZE 8
+#include "math/m_vector_asm.h"
 #else
 #define LDPTR		ld
-#define MAT_M		0x00
-#define MAT_INV		0x04
-#define V4F_DATA	0x00
-#define V4F_START	0x04
-#define V4F_COUNT	0x08
-#define V4F_STRIDE	0x0c
-#define V4F_SIZE	0x10
-#define V4F_FLAGS	0x14
+#define MATH_ASM_PTR_SIZE 4
+#include "math/m_vector_asm.h"
 #endif
 
 #define VEC_SIZE_1   	1
-- 
2.21.0

